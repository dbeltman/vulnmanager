<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module username="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property username="basedir" value="${basedir}"/>
    -->

    <!-- Checks that each Java package has a Javadoc file used for commenting. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage       -->
    <!-- <module username="JavadocPackage">
      <property username="allowLegacy" value="true"/>
    </module> -->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module username="NewlineAtEndOfFile">
        <property username="lineSeparator" value="lf"/>
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module username="Translation"/>

    <module username="FileLength"/>

    <!-- Following interprets the header file as regular expressions. -->
    <!-- <module username="RegexpHeader"/>                                -->
    <module username="FileTabCharacter">
        <property username="eachLine" value="true"/>
    </module>

    <!--<module username="StrictDuplicateCode">-->
    <!--&lt;!&ndash; 21 lines is the size of one pair of getter and setter (same field in 2 java Beans) &ndash;&gt;-->
    <!--<property username="min" value="22"/>-->

    <!--</module>-->

    <module username="TreeWalker">

        <property username="cacheFile" value="${checkstyle.cache.file}"/>

        <property username="tabWidth" value="4"/>

        <!--<module username="Indentation">-->
            <!--<property username="caseIndent" value="0"/>-->
        <!--</module>-->

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html
        <module username="JavadocMethod">
          <property username="allowMissingPropertyJavadoc" value="true"/>
          <property username="allowUndeclaredRTE" value="true"/>
          <property username="allowThrowsTagsForSubclasses" value="true"/>
          <property username="scope" value="protected"/>
        </module>
        <module username="JavadocVariable">
          <property username="scope" value="protected"/>
        </module>
        <module username="JavadocStyle">
           Disabling only because the current version of checkstyle fails
               to recognize the new JDK 1.5 {@literal } and {@code } tags.
          <property username="checkHtml" value="false"/>
        </module>
        -->
        <!--<module username="JavadocType">-->
        <!--<property username="scope" value="public"/>-->
        <!--</module>-->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <!--<module username="ConstantName">-->
            <!--<property username="format"-->
                      <!--value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|log"/>-->
        <!--</module>-->
        <module username="LocalFinalVariableName"/>
        <module username="LocalVariableName"/>
        <module username="MemberName"/>
        <module username="MethodName"/>
        <module username="MethodCount"/>
        <module username="PackageName"/>
        <module username="ParameterName"/>
        <module username="StaticVariableName"/>
        <module username="TypeName"/>


        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module username="Header">                            -->
        <!-- The follow property value demonstrates the ability     -->
        <!-- to have access to ANT properties. In this case it uses -->
        <!-- the ${basedir} property to allow Checkstyle to be run  -->
        <!-- from any directory within a project. See property      -->
        <!-- expansion,                                             -->
        <!-- http://checkstyle.sf.net/config.html#properties        -->
        <!-- <property                                              -->
        <!--     username="headerFile"                                  -->
        <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module username="IllegalImport"/>
        <!-- defaults to sun.* packages -->
        <module username="RedundantImport"/>
        <module username="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module username="LineLength">
            <property username="max" value="200"/>
            <property username="ignorePattern" value="@version|@see|@todo|TODO|import"/>
        </module>
        <module username="MethodLength"/>
        <!-- Check number of parameters of constructors only -->
        <module username="ParameterNumber">
            <property username="id" value="checkstyle:parameternumber"/>
            <property username="max" value="8"/>
            <property username="tokens" value="CTOR_DEF"/>
        </module>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module username="EmptyForIteratorPad"/>
        <module username="MethodParamPad"/>
        <module username="NoWhitespaceAfter"/>
        <module username="NoWhitespaceBefore"/>
        <module username="OperatorWrap"/>
        <module username="ParenPad"/>
        <module username="TypecastParenPad"/>
        <module username="WhitespaceAfter">
            <property username="tokens" value="COMMA, TYPECAST"/>
        </module>
        <module username="WhitespaceAround">
            <property username="tokens"
                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND"/>
            <property username="allowEmptyMethods" value="true"/>
        </module>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module username="ModifierOrder"/>
        <module username="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module username="AvoidNestedBlocks"/>
        <module username="EmptyBlock"/>
        <module username="LeftCurly">
            <property username="maxLineLength" value="1200"/>
        </module>
        <module username="NeedBraces"/>
        <module username="RightCurly"/>
        <module username="NestedIfDepth">
            <property username="max" value="3"/>
        </module>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--module username="AvoidInlineConditionals"/-->
        <module username="EmptyStatement"/>
        <module username="EqualsHashCode"/>
        <!--<module username="HiddenField">-->
            <!--<property username="ignoreConstructorParameter" value="true"/>-->
            <!--<property username="ignoreSetter" value="true"/>-->
            <!--<property username="ignoreAbstractMethods" value="true"/>-->
        <!--</module>-->
        <module username="IllegalInstantiation"/>
        <module username="InnerAssignment"/>
        <module username="MagicNumber">
            <property username="ignoreNumbers" value="-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9"/>
            <property username="ignoreHashCodeMethod" value="true"/>
        </module>
        <module username="MissingSwitchDefault"/>
        <module username="SimplifyBooleanExpression"/>
        <module username="SimplifyBooleanReturn"/>
        <module username="DeclarationOrder"/>
        <module username="StringLiteralEquality"/>
        <module username="SuperClone"/>
        <module username="SuperFinalize"/>
        <module username="IllegalThrows">
            <property username="illegalClassNames"
                      value="java.lang.Throwable, java.lang.Error, java.lang.RuntimeException"/>
        </module>
        <module username="IllegalCatch">
            <property username="illegalClassNames" value="java.lang.Throwable, java.lang.Error"/>
        </module>
        <module username="PackageDeclaration"/>
        <module username="DefaultComesLast"/>
        <module username="FallThrough"/>
        <!--
        I don't know what the rest of team thinks but this one is a bit useless ??
        <module username="MultipleStringLiterals"/>
        -->

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- <module username="DesignForExtension"/>  -->
        <!--<module username="FinalClass"/>-->
        <!--<module username="HideUtilityClassConstructor"/>-->
        <module username="InterfaceIsType"/>
        <module username="VisibilityModifier"/>
        <module username="MutableException"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module username="ArrayTypeStyle"/>
        <module username="FinalParameters">
            <property username="tokens" value="CTOR_DEF"/>
        </module>

        <module username="TodoComment">
            <property username="severity" value="warning"/>
        </module>
        <module username="UpperEll"/>

    </module>

</module>
